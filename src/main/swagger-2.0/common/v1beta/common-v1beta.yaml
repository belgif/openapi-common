swagger: '2.0'
info:
  title: common technical data types
  description: common types in beta status
  version: v1beta
tags:
  - name: Monitoring
produces:
  - application/json
paths:
  /health:
    get:
      tags:
        - Monitoring
      summary: Check health of this REST API
      description: Get the health of this API. Inspired on https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready
      operationId: health
      responses:
        '200':
          description: The service is up
          schema:
            $ref: '#/definitions/HealthStatus'
        '503':
          description: The service is down or outOfService
          schema:
            $ref: '#/definitions/HealthStatus'
          examples:
            application/json: {
              'status': 'down',
              'details': {
                'datastore': {
                  'status': 'outOfService'
                }
              }
            }
definitions:
  HealthStatus:
    description: Response message for the API health 
    type: object
    required:
      - status
    properties:
      status:
        $ref: '#/definitions/HealthLevel'
      details:
        type: object
        additionalProperties:
          $ref: '#/definitions/ComponentStatus'
  ComponentStatus:
    description: Status of an API component 
    type: object
    required:
      - status
    properties:
      status:
        $ref: '#/definitions/HealthLevel'
  HealthLevel:
    description: Status of the health check. Inspired on https://github.com/spring-projects/spring-boot/blob/v2.0.3.RELEASE/spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/Status.java
    type: string
    enum:
      - up
      - degraded
      - down
      - unknown
      - outOfService